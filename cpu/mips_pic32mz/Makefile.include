# Target triple for the build.
export TARGET_ARCH ?= mips-mti-elf

export ABI=32
export MEMORY_BASE=0x80000000
export MEMORY_SIZE=512K
export APP_START=0x80000000
export ROMABLE = 1

include $(MIPS_ELF_ROOT)/share/mips/rules/mipshal.mk

# define build specific options
export CFLAGS_CPU   = -EL -march=m5101
export CFLAGS_LINK  = -ffunction-sections -fno-builtin -fshort-enums 
export CFLAGS_DBG = -O0 -g2
export CFLAGS_OPT = -Os

export CFLAGS += $(CFLAGS_CPU) $(CFLAGS_LINK) $(CFLAGS_DBG) -DSKIP_COPY_TO_RAM 
#$(CFLAGS_OPT)

export ASFLAGS += $(CFLAGS_CPU) $(CFLAGS_DBG)

export LINKFLAGS += $(MIPS_HAL_LDFLAGS) -mabi=$(ABI) -Wl,--defsym,__use_excpt_boot=0
export LINKFLAGS += -T$(RIOTCPU)/$(CPU)/ldscripts/pic32mz2048_uhi.ld
export LINKFLAGS += $(CFLAGS_CPU) $(CFLAGS_DBG) #$(CFLAGS_OPT)
export LINKFLAGS += -Wl,--print-gc-sections #-Wl,--no-gc-sections #DONT GARBAGE COLLECT AS WE NEED TO KEEP THE CONFIG SETTINGS

# This CPU implementation is using the new core/CPU interface:
export CFLAGS += -DCOREIF_NG=1

# use newlib as libc, Actually use toolchains newlib.
#export USEMODULE += newlib

export USEMODULE += periph
